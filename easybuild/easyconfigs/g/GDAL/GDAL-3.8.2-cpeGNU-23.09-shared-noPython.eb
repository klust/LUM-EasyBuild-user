easyblock = 'CMakeMake'

local_GDAL_version =         '3.8.2'         # https://github.com/OSGeo/gdal/releases

local_Blosc_version =        '1.21.5'        # https://github.com/Blosc/c-blosc/releases
local_cURL_version =         '8.0.1'         # https://curl.haxx.se/download/
local_expat_version =        '2.5.0'         # https://github.com/libexpat/libexpat/releases
local_giflib_version =       '5.2.1'         # https://sourceforge.net/projects/giflib/files/
local_JasPer_version =       '4.0.0'         # https://github.com/jasper-software/jasper/releases
local_SQLite_version =       '3.42.0'        # https://www.sqlite.org/
local_libaec_version =       '1.0.6'         # https://gitlab.dkrz.de/k202009/libaec/-/tags
local_libarchive_version =   '3.6.2'         # https://github.com/libarchive/libarchive/releases
local_libdeflate_version =   '1.18'          # https://github.com/ebiggers/libdeflate/releases
local_libjpegturbo_version = '2.1.5.1'       # https://github.com/libjpeg-turbo/libjpeg-turbo/releases
local_libxml2_version =      '2.11.4'        # http://xmlsoft.org/sources/
local_libpng_version =       '1.6.39'        # http://www.libpng.org/pub/png/libpng.html
local_libtiff_version =      '4.5.0'         # https://download.osgeo.org/libtiff/
local_libwebp_version =      '1.3.2'         # https://github.com/webmproject/libwebp/releases
local_lz4_version =          '1.9.4'         # https://github.com/lz4/lz4/releases
local_PCRE2_version =        '10.42'         # https://ftp.pcre.org/pub/pcre/
local_PROJ_version =         '9.2.0'         # https://proj.org/download.html
local_zlib_version =         '1.2.13'        # https://zlib.net/
local_zstd_version =         '1.5.5'         # https://github.com/facebook/zstd/releases

local_GEOS_version =         '3.12.1'        # https://github.com/libgeos/geos/releases
local_HDF_version =          '4.2.16-2'      # https://support.hdfgroup.org/ftp/HDF/releases/
local_jsonc_version =        '0.16'          # https://github.com/json-c/json-c/tags
local_libgeotiff_version =   '1.7.1'         # https://github.com/OSGeo/libgeotiff/releases

name =          'GDAL'
version =       local_GDAL_version
versionsuffix = '-shared-noPython'

homepage = 'https://www.gdal.org'

whatis = [
    'Description: translator library for raster geospatial data formats',
    'This module provides the command line utilities and shared libraries',
]

description = """
GDAL is a translator library for raster geospatial data formats that is released
under an X/MIT style Open Source license by the Open Source Geospatial
Foundation. As a library, it presents a single abstract data model to the 
alling application for all supported formats. It also comes with a variety of
useful commandline utilities for data translation and processing.

This module contains a number of command line tools and shared libraries.
It is built without support for Python. GDAL does have a lot more features
than are enabled in this build however. This module was installed through
EasyBuild, so users experienced with EasyBuild may further extend the
build recipe to enable additional options in GDAL.
"""

docurls = [
   'Web-based documentation on the package home page http://www.gdal.org/',
]


toolchain = {'name': 'cpeGNU', 'version': '23.09'}
toolchainopts = {'usempi': True, 'pic': True}

source_urls = ['https://download.osgeo.org/gdal/%(version)s/']
sources =     [SOURCELOWER_TAR_XZ]
#patches =     ['GDAL-3.0.0_fix-python-CC-CXX.patch']
checksums = [
    'dc2921ee1cf7a5c0498e94d15fb9ab9c9689c296363a1d021fc3293dd242b4db',  # gdal-3.5.2.tar.xz
#    '223a0ed1afb245527d546bb19e4f80c00f768516ab106d82e53cf36b5a1a2381',  # GDAL-3.0.0_fix-python-CC-CXX.patch
]

builddependencies = [
    ('buildtools', '%(toolchain_version)s', '', True),
]

dependencies = [
    ('cray-hdf5',     EXTERNAL_MODULE),
    ('cray-netcdf',   EXTERNAL_MODULE),
#    ('cray-python',   EXTERNAL_MODULE),
    # Packages from the central software stack
    ('Blosc',         local_Blosc_version),
    ('cURL',          local_cURL_version),
    ('expat',         local_expat_version),
    ('SQLite',        local_SQLite_version),
    ('libarchive',    local_libarchive_version),
    ('libaec',        local_libaec_version),
    ('libdeflate',    local_libdeflate_version),
    ('lz4',           local_lz4_version),
    ('libxml2',       local_libxml2_version),
    ('libpng',        local_libpng_version),
    ('libjpeg-turbo', local_libjpegturbo_version),
    ('JasPer',        local_JasPer_version),
    ('LibTIFF',       local_libtiff_version),
    ('libwebp',       local_libwebp_version),
    ('giflib',        local_giflib_version),
    ('zlib',          local_zlib_version),
    ('zstd',          local_zstd_version),
    ('PCRE2',         local_PCRE2_version),
    ('PROJ',          local_PROJ_version),
    ('HDF',           local_HDF_version),
    # Packages from the contributed repository
    ('GEOS',          local_GEOS_version),
    ('json-c',        local_jsonc_version),
    ('libgeotiff',    local_libgeotiff_version),
]

maxparallel = 1

# Iterative build for both static and shared libraries
local_configopts_common  = '-DCMAKE_INSTALL_LIBDIR=lib '
local_configopts_common += '-DGDAL_USE_EXTERNAL_LIBS:BOOL=ON -DGDAL_USE_INTERNAL_LIBS=WHEN_NO_EXTERNAL '
local_configopts_common += '-DGEOTIFF_INCLUDE_DIR=$EBROOTLIBGEOTIFF/include '
local_configopts_common += '-DGDAL_USE_HDF5=OFF '

configopts = [
#    local_configopts_common + "-DBUILD_SHARED_LIBS=OFF",
    local_configopts_common + "-DBUILD_SHARED_LIBS=ON"
]

postinstallcmds = [
    'cd ../%(namelower)s-%(version)s && mkdir -p %(installdir)s/share/licenses/%(name)s && cp LICENSE.TXT PROVENANCE.TXT NEWS.md %(installdir)s/share/licenses/%(name)s',
]

modextrapaths = {'PYTHONPATH': 'lib/python%(pyshortver)s/site-packages'}

sanity_check_paths = {
    'files': ['lib/libgdal.a', 'lib/pkgconfig/gdal.pc',
              'share/licenses/GDAL/LICENSE.TXT', 'share/licenses/GDAL/PROVENANCE.TXT'],
    'dirs':  ['bin', 'include']
}

sanity_check_commands = [ # Few commands to really test as almost all return error codes when no data file is given.
    'pkg-config --libs gdal',
    'gdal-config --version',     
]

moduleclass = 'data'

