# Written by Kurt Lust for the LUMI consortium.
easyblock = 'Bundle'
#
# This EasyConfig file is rather tricky at the moment.
#   - It uses a GitHub repository which is private so a GitHub token is needed to read it.
#   - It also assumes that there is a file turbovnc-container-%(version)s.tar ready in the
#     sources directory that only contains vnc.sif, the Singularity container for VNC.
#     (We didn't even botter compressing the tar file as it turns out there is almost no gain).
#

name =    'lumi-vnc'
version = '20220118'

homepage = '(none)'

whatis = [
    'Description: Containerised VNC server to use until Open OnDemand becomes available on LUMI in late \'22'
]

description = """
This module provides a containerised version of the TurboVNC server to be used
for remote graphics as long as Open OnDemand hasn't been set up on LUMI, which
will happen at the earliest in the later half of 2022.
"""

toolchain = SYSTEM

default_easyblock = 'MakeCp'

components = [
    ( 'utility-tools', version, {
        'sources': [{
                      'filename': '%(namelower)s-%(version)s.tar.gz',
                      'git_config': {
                          'url':       'https://github.com/Lumi-supercomputer',
                          'repo_name': '%(name)s',
                          'commit':    '2049ece544ee9f904e30aae059ad41b51b2e0245'
                      }
                   }],
        'skipsteps': [ 'configure', 'build' ],
        'start_dir': '%(name)s',
        'files_to_copy': [
                            (['VNC/*'], 'scripts/VNC'),
                            (['settings.sh', 'LICENSE'], 'scripts')
                         ],
    }),
    ( 'turbovnc-container', version, {
        'sources':       ['turbovnc-container-%(version)s.tar'],
        'skipsteps':     [ 'configure', 'build' ],
        'start_dir':     '.',
        'files_to_copy': [ ([ 'vnc.sif' ], 'scripts/VNC/vnc.sif') ],
    }),
]

sanity_check_paths = {
    'files': [ 'scripts/VNC/vcn.sif' ],
    'dirs':  [ 'scripts/VNC' ]
}

modluafooter = """

local start_vnc_bash = 'source %(installdir)s/scripts/VNC/_get_vnc_display "$@"'
-- The following for CSH needs improvement, but we don't really support C shell and its derivatives
-- on LUMI at the moment.
local start_vnc_csh  = 'source %(installdir)s/scripts/VNC/_get_vnc_display $*'

set_shell_function( 'start-vnc', start_vnc_bash, start_vnc_csh )

"""

moduleclass = 'tools'
