# This EasyConfig has been tested succesfully on Eiger in LUMI/21.06 partition/common
easyblock = 'PythonPackage'

local_SCons_version =            '3.1.2'         # SCons      20101217 - https://github.com/SCons/scons/releases, https://scons.org/pages/download.html

name =          'SCons'
version =       local_SCons_version
versionsuffix = '-python2'

homepage = 'https://www.scons.org/'

whatis = [
    'Description: SCons is a software construction tool.',
    'This is SCons with Python 2 for those scripts that don\'t work with Python 3, use buildtools for a Python 3-based SCons',

]

description = """
SCons is an Open Source software construction toolâ€”that is, a next-generation
build tool. Think of SCons as an improved, cross-platform substitute for the
classic Make utility with integrated functionality similar to autoconf/automake
and compiler caches such as ccache. In short, SCons is an easier, more reliable
and faster way to build software.

This module provides SCons with Python 2, for those SCons installation procedures
that still include scripts that only work with Python 2. Use the buildtools
modules to have a Python 3-based SCons.
"""

docurls = [
    'Manual pages in section 1 for scons, sconsign and scons-time',
]

toolchain = SYSTEM

source_urls = [SOURCEFORGE_SOURCE]
sources =     [SOURCELOWER_TAR_GZ]
checksums =   ['7801f3f62f654528e272df780be10c0e9337e897650b62ddcee9f39fde13f8fb']

osdependencies = [
    ('python2')
]

req_py_majver = 2
req_py_minver = 7
download_dep_fail = True
use_pip = False
sanity_pip_check = False

postinstallcmds = [
    '/bin/rm %(installdir)s/bin/scon*.bat',
    'cd %(installdir)s/bin; sed -e "s/env python/env python2/" -i scons*' # HArd-code python2 instead of python.
]

sanity_check_paths = {
    'files': ['bin/scons', 'bin/scons-time', 'bin/sconsign'],
    'dirs':  ['man/man1'],
}

# no Python module to import during sanity check
options = {'modulename': False}

moduleclass = 'devel'
