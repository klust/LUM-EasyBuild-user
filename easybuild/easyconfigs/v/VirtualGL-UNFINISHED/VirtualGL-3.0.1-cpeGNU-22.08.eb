# Contribution from the Crick HPC team
# uploaded by J. Sassmannshausen
# updated by Valentin Plugaru <valentin.plugaru@uni.lu> 2019-09-26
# Reworked for LUMI by Kurt Lust (kurt.lust@uantwerpen.be).

easyblock = 'CMakeMake'

local_libjpegturbo_version = '2.1.3'         # https://github.com/libjpeg-turbo/libjpeg-turbo/releases

name =    'VirtualGL'
version = '3.0.1'

homepage = 'https://virtualgl.org/'

whatis = [
    'Description: VirtualGL is an open source toolkit that gives any remote display software the ability to run OpenGL applications with hardware accelerationm'
]

description = """
VirtualGL is an open source toolkit that gives any Linux or 
Unix remote display software the ability to run OpenGL applications with full 
hardware acceleration.

It is meant to be used in conjunction with a VNC server that doesn't support the
GLX extension or doesn't use hardware acceleration for processing GLX. It will reroute
OpenGL calls to the hardware accelerator to render the images and then pass these to
the VNC server (and you can replace VNC with any other remote display technology).
It is meant for use on nodes with a GPU only.
"""

toolchain =     {'name': 'cpeGNU', 'version': '22.08'}
toolchainopts = {'extra_cflags': '-fpermissive', 'extra_cxxflags': '-fpermissive'}

source_urls = ['https://github.com/VirtualGL/virtualgl/archive/']
sources =     ['%(version)s.tar.gz']
patches =     ['%(name)s-%(version)s_datatypes.patch']
checksums =   ['ab0ed2e3363f2f26fbabed966499e0a72f04efca052b9da851ff0064218cdf6e']

builddependencies = [
    ('buildtools', '%(toolchain_version)s', '', SYSTEM),
]

dependencies = [
    ('libjpeg-turbo', local_libjpegturbo_version),
    ('Mesa',          '22.0.3'),
    ('libGLU',        '9.0.2'),
#    ('pocl',          '3.0'), # Needed for the OpenCL/OpenGL interoperability feature.
]

configopts = '-DVGL_FAKEOPENCL=OFF ' # Since we want to avoid the use of pocl which is hard to build.

local_binaries = [
    'cpustat', 'glreadtest', 'glxinfo', 'glxspheres64', 'nettest', 'tcbench',
    'vglclient', 'vglconfig', 'vglconnect', 'vglgenkey', 'vgllogin', 'vglrun',
    'vglserver_config'
]

sanity_check_paths = {
    'files': ['bin/%s' % x for x in local_binaries],
    'dirs':  ['lib64', 'share', 'include'],
}

moduleclass = 'vis'